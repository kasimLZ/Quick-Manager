// <auto-generated />
using Database;
using Database.Base.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Database.Migrations
{
    [DbContext(typeof(ApplicationDB))]
    [Migration("20171116021859_update")]
    partial class update
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Database.Base.Model.SysAction", b =>
                {
                    b.Property<long>("Id");

                    b.Property<string>("ActionDisplayName")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<int>("ActionType");

                    b.Property<string>("ButtonIcon")
                        .HasMaxLength(50);

                    b.Property<string>("ButtonStyle")
                        .HasMaxLength(50);

                    b.Property<int>("ButtonType");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("Deleted");

                    b.Property<string>("SystemId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("SysActions");
                });

            modelBuilder.Entity("Database.Base.Model.SysArea", b =>
                {
                    b.Property<long>("Id");

                    b.Property<string>("AreaDisplayName");

                    b.Property<string>("AreaName");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("Deleted");

                    b.Property<bool>("Display");

                    b.Property<bool>("Enabled");

                    b.Property<bool>("NeedAuth");

                    b.Property<int>("SortWeight");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("SysAreas");
                });

            modelBuilder.Entity("Database.Base.Model.SysController", b =>
                {
                    b.Property<long>("Id");

                    b.Property<string>("ActionName")
                        .HasMaxLength(50);

                    b.Property<string>("ControllerDisplayName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ControllerName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("Deleted");

                    b.Property<bool>("Display");

                    b.Property<bool>("Enabled");

                    b.Property<string>("Ico");

                    b.Property<string>("Parameter")
                        .HasMaxLength(50);

                    b.Property<long?>("SysAreaId");

                    b.Property<string>("SystemId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("TargetBlank");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("SysAreaId");

                    b.ToTable("SysControllers");
                });

            modelBuilder.Entity("Database.Base.Model.SysControllerSysAction", b =>
                {
                    b.Property<long>("Id");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("Deleted");

                    b.Property<long>("SysActionId");

                    b.Property<long>("SysControllerId");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("SysActionId");

                    b.HasIndex("SysControllerId");

                    b.ToTable("SysControllerSysActions");
                });

            modelBuilder.Entity("Database.Base.Model.SysRole", b =>
                {
                    b.Property<long>("Id");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("Deleted");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("SystemId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("SysRoles");
                });

            modelBuilder.Entity("Database.Base.Model.SysRoleSysControllerSysAction", b =>
                {
                    b.Property<long>("Id");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("Deleted");

                    b.Property<long>("SysControllerSysActionId");

                    b.Property<long>("SysRoleId");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("SysControllerSysActionId");

                    b.HasIndex("SysRoleId");

                    b.ToTable("SysRoleSysControllerSysAction");
                });

            modelBuilder.Entity("Database.Base.Model.SysRoleSysUserInfo", b =>
                {
                    b.Property<long>("Id");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("Deleted");

                    b.Property<long>("SysRoleId");

                    b.Property<long>("SysUserId");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("SysRoleId");

                    b.HasIndex("SysUserId");

                    b.ToTable("SysRoleSysUserInfo");
                });

            modelBuilder.Entity("Database.Base.Model.SysUserInfo", b =>
                {
                    b.Property<long>("Id");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("Deleted");

                    b.Property<bool>("Enable");

                    b.Property<string>("HeadIcon");

                    b.Property<DateTime?>("LastLoginTime");

                    b.Property<string>("Login")
                        .HasMaxLength(30);

                    b.Property<string>("Password")
                        .HasMaxLength(256);

                    b.Property<string>("RealName");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UserName");

                    b.Property<int>("sex");

                    b.HasKey("Id");

                    b.ToTable("SysUserInfos");
                });

            modelBuilder.Entity("Database.Base.Model.SysController", b =>
                {
                    b.HasOne("Database.Base.Model.SysArea", "SysArea")
                        .WithMany("SysControllers")
                        .HasForeignKey("SysAreaId");
                });

            modelBuilder.Entity("Database.Base.Model.SysControllerSysAction", b =>
                {
                    b.HasOne("Database.Base.Model.SysAction", "SysAction")
                        .WithMany("SysControllerSysActions")
                        .HasForeignKey("SysActionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Database.Base.Model.SysController", "SysController")
                        .WithMany("SysControllerSysActions")
                        .HasForeignKey("SysControllerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Database.Base.Model.SysRoleSysControllerSysAction", b =>
                {
                    b.HasOne("Database.Base.Model.SysControllerSysAction", "SysControllerSysAction")
                        .WithMany("SysRoleSysControllerSysActions")
                        .HasForeignKey("SysControllerSysActionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Database.Base.Model.SysRole", "SysRole")
                        .WithMany("SysRoleSysControllerSysActions")
                        .HasForeignKey("SysRoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Database.Base.Model.SysRoleSysUserInfo", b =>
                {
                    b.HasOne("Database.Base.Model.SysRole", "SysRole")
                        .WithMany("SysRoleSysUsers")
                        .HasForeignKey("SysRoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Database.Base.Model.SysUserInfo", "SysUserInfo")
                        .WithMany()
                        .HasForeignKey("SysUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
